// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model buttonFollowing {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  serverId   String  @unique
  setRole    String?
  mod        String?
  setChannel String?
}

model aceptRules {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  serverId   String  @unique
  setRole    String?
  removeRole String?
  setChannel String?
}

model settingWelcome {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  serverId String @unique
  setRole  String
}

model Server {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  serverId          String  @unique
  serverName        String
  buttonFollowingId String?
}

model counter_ticket {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  value Int    @unique @default(0)
}

model Tickets {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  serverId  String
  userId    String
  ticketId  Int     @unique @default(0)
  message   String
  messageId String?
  status    Boolean @default(true)
}

model statusTicket {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  ticketId Int    @unique @default(0)
  status   String @default("open")
}

model setTicket {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  serverId       String  @unique
  requestChannel String?
  pendingChannel String?
}

model MetricCommands {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  serverId    String  
  serverName    String  
  numberUsed  Int
  commandUsed String
}
